services:
  # MediaMTX - Media Server
  mediamtx:
    image: bluenviron/mediamtx:latest
    container_name: visionguard-mediamtx
    restart: unless-stopped
    ports:
      # RTSP
      - "8554:8554"
      - "8000:8000/udp"
      - "8001:8001/udp"
      # RTMP
      - "1935:1935"
      # HLS
      - "8888:8888"
      # WebRTC
      - "8889:8889"
      # API
      - "9997:9997"
      # WebRTC ICE
      - "8189:8189/udp"
      - "8189:8189"
      # SRT
      - "8890:8890/udp"
    environment:
      MTX_WEBRTCADDITIONALHOSTS: "127.0.0.1"
      MTX_PROTOCOLS: "tcp"
    volumes:
      - ./mediamtx/mediamtx.yml:/mediamtx.yml:ro
    networks:
      - ${VISIONGUARD_NETWORK_NAME}

  # Backend Service
  backend:
    build:
      context: ../backend-service
      dockerfile: Dockerfile
    container_name: visionguard-backend
    restart: unless-stopped
    ports:
      - "${BACKEND_SERVICE_PORT:-3000}:${BACKEND_SERVICE_PORT:-3000}"
    env_file:
      - ./env/backend.env
    networks:
      - ${VISIONGUARD_NETWORK_NAME}

  # Worker Service
  worker:
    build:
      context: ../worker-service
      dockerfile: Dockerfile
    container_name: visionguard-worker
    restart: unless-stopped
    ports:
      - "${WORKER_SERVICE_PORT:-5000}:${WORKER_SERVICE_PORT:-5000}"
    depends_on:
      - mediamtx
      - backend
    env_file:
      - ./env/worker.env
    volumes:
      - worker_snapshots:/tmp/visionguard/snapshots
    networks:
      - ${VISIONGUARD_NETWORK_NAME}

  # Frontend Service
  frontend:
    build:
      context: ../frontend-service
      dockerfile: Dockerfile
      args:
        VITE_APP_API_BASE_URL: http://localhost:3000/api/v1
        VITE_APP_ACCESS_TOKEN_KEY: visionguard-access-token
    container_name: visionguard-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_SERVICE_PORT:-5173}:${FRONTEND_SERVICE_PORT:-5173}"
    networks:
      - ${VISIONGUARD_NETWORK_NAME}

networks:
  visionguard-network:
    driver: bridge

volumes:
  mediamtx_data:
    driver: local
  worker_snapshots:
    driver: local
