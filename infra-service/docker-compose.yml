services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: visionguard-postgres
    restart: unless-stopped
    ports:
      - "${POSTGRES_PORT:-5432}:${POSTGRES_PORT:-5432}:"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-visionguard_db}
      POSTGRES_USER: ${POSTGRES_USER:-visionguard_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-visionguard_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U visionguard"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - visionguard-network

  # MediaMTX - Media Server
  mediamtx:
    image: bluenviron/mediamtx:latest
    container_name: visionguard-mediamtx
    network_mode: host
    restart: unless-stopped
    ports:
      - "8554:8554" # RTSP
      - "1935:1935" # RTMP
      - "8888:8888" # HLS
      - "8889:8889" # WebRTC
      - "9997:9997" # API
    volumes:
      - ./mediamtx/mediamtx.yml:/mediamtx.yml:ro
    networks:
      - visionguard-network

  # Backend Service
  backend:
    build:
      context: ../backend-service
      dockerfile: Dockerfile
    container_name: visionguard-backend
    restart: unless-stopped
    ports:
      - "${BACKEND_SERVICE_PORT:-3000}:${BACKEND_SERVICE_PORT:-3000}"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      PORT: ${BACKEND_SERVICE_PORT:-3000}
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET}
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET}
      WORKER_SERVICE_URL: ${WORKER_SERVICE_URL}
      FRONTEND_SERVICE_URL: ${FRONTEND_SERVICE_URL}
    networks:
      - visionguard-network

  # Worker Service
  worker:
    build:
      context: ../worker-service
      dockerfile: Dockerfile
    container_name: visionguard-worker
    restart: unless-stopped
    ports:
      - "${WORKER_SERVICE_PORT:-5000}:${WORKER_SERVICE_PORT:-5000}"
    environment:
      PORT: ${WORKER_SERVICE_PORT:-5000}
      GIN_MODE: ${GIN_MODE:-release}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      BACKEND_SERVICE_URL: ${BACKEND_SERVICE_URL}
    networks:
      - visionguard-network

  # Frontend Service
  frontend:
    build:
      context: ../frontend-service
      dockerfile: Dockerfile
    container_name: visionguard-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_SERVICE_PORT:-5173}:${FRONTEND_SERVICE_PORT:-5173}:"
    environment:
      VITE_BACKEND_SERVICE_URL: ${BACKEND_SERVICE_URL}
      VITE_BACKEND_SERVICE_WEBSOCKET_URL: ${BACKEND_SERVICE_WEBSOCKET_URL}
      VITE_MEDIAMTX_URL: ${MEDIAMTX_URL}
    networks:
      - visionguard-network

  networks:
    visionguard-network:
      driver: bridge

  volumes:
    postgres_data:
      driver: local
    mediamtx_data:
      driver: local
